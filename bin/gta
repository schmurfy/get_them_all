#!/usr/bin/env ruby
require "rubygems"

$LOAD_PATH.unshift( File.expand_path('../../lib', __FILE__) )
require "get_them_all"
require "thor"


class GtaRunner < Thor
  
  desc "dropbox_session", "create a session for dropbox storage"
  def dropbox_session
    
    key = ask("Enter your key:")
    secret = ask("Enter your secret:")
    
    # STEP 1: Authorize the user
    session = Dropbox::Session.new(key, secret)
    session.mode = :dropbox
    ask("Visit #{session.authorize_url} to log in to Dropbox. Hit enter when you have done this.")
    session.authorize
    
    puts session.serialize
  end
  
  desc "exec [-s <path>] <script_path>", "run a user script"
  method_option :storage_path,        :aliases => '-s', :desc => "path where the data will be saved"
  def exec(script_path)    
    
    storage_path = options[:storage_path]
    raise("storage_path required") unless storage_path
    
    if storage_path[0,1] != '/'
      # relative path
      storage_path = File.join(Dir.pwd, storage_path)
    end
    
    if script_path[0,1] != '/'
      script_path = File.join(Dir.pwd, script_path)
    end

    # the file exist, load it
    require script_path

    # check that the class exist
    class_name = File.basename(script_path, ".rb").camelize + "Downloader"
    fail("file #{script_path} should define class #{class_name} !") unless Object.const_defined?( class_name.to_sym )

    info("Started with config file #{File.basename(script_path)}")
        
    # create the instance (and start download)
    crawler = class_name.constantize.new(
        :storage => {
            :type => 'file',
            :params => {
                :root => storage_path
              }
          },
        :extensions => [GetThemAll::ActionLogger.new]
      )
    
    # CTRL+C
    trap("INT") do
      crawler.stop()
    end    
    
    deferrable = crawler.start()
    deferrable.callback do
      EM::stop_event_loop()
    end
  end
end

GtaRunner.start
